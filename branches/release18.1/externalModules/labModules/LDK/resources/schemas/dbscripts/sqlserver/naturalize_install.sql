/*
    Naturalize() is designed to provide a value to use for 'natural sorting' of data, which provides a
    more human-friendly sorting of mixed numeric/text values.  Adapted from code here:

    http://stackoverflow.com/questions/34509/natural-human-alpha-numeric-sort-in-microsoft-sql-2005

    The C# file used to create the assembly is checked in to this module under /tools.  Tested in SQLServer 2008R2.
*/
SET NOCOUNT ON ;
GO

-------------------------------------------------------------------------------------------------------------------------------
-- Turn advanced options on
EXEC sys.sp_configure @configname = 'show advanced options', @configvalue = 1 ;
GO
RECONFIGURE WITH OVERRIDE ;
GO
-- Enable CLR
EXEC sys.sp_configure @configname = 'clr enabled', @configvalue = 1 ;
GO
RECONFIGURE WITH OVERRIDE ;
GO

-- Add trusted assembly if we are running on SQLServer 2017
IF OBJECT_ID(N'sys.trusted_assemblies', N'V') IS NOT NULL
BEGIN
  DECLARE @hash VARBINARY(64) = 0xAB53701DA71A00CFA24EA54B395E8CE943E23331A285B12651BB9B5374FBC454F65673C3DCF8223ACD8184812F41179B2A66F463C7A60C2F8F3BDD8B28F65D25;
  DECLARE @description NVARCHAR(4000) = N'Naturalize, version=0.0.0.0, culture=neutral, publickeytoken=null, processorarchitecture=msil';

  IF NOT EXISTS (SELECT * FROM sys.trusted_assemblies WHERE hash = @hash)
    EXEC sys.sp_add_trusted_assembly @hash, @description

END
GO

-------------------------------------------------------------------------------------------------------------------------------
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, QUOTED_IDENTIFIER ON;
SET CONCAT_NULL_YIELDS_NULL, NUMERIC_ROUNDABORT OFF;
GO
IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE id=OBJECT_ID('tempdb..#tmpErrors')) DROP TABLE #tmpErrors
GO
CREATE TABLE #tmpErrors (Error int)
GO
SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL READ COMMITTED
GO
BEGIN TRANSACTION
GO
-------------------------------------------------------------------------------------------------------------------
PRINT N'Creating [Naturalize]...';
GO
IF object_id(N'ldk.Naturalize', N'FS') IS NOT NULL
  DROP FUNCTION ldk.Naturalize
GO

IF  EXISTS (SELECT * FROM sys.assemblies asms WHERE asms.name = N'Naturalize' and is_user_defined = 1)
  DROP ASSEMBLY [Naturalize]
GO
CREATE ASSEMBLY [Naturalize]
AUTHORIZATION [dbo]
FROM 0x
WITH PERMISSION_SET = SAFE;

GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
  BEGIN
    ROLLBACK;
  END
IF @@TRANCOUNT = 0
  BEGIN
    INSERT  INTO #tmpErrors (Error)
      VALUES                 (1);
    BEGIN TRANSACTION;
  END
GO
-------------------------------------------------------------------------------------------------------------------
PRINT N'Creating ldk.[NATURALIZE]...';
GO
CREATE FUNCTION ldk.Naturalize(@val as nvarchar(max))
  RETURNS nvarchar(1000)
  EXTERNAL NAME Naturalize.UDF.Naturalize
GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
  BEGIN
    ROLLBACK;
  END
IF @@TRANCOUNT = 0
  BEGIN
    INSERT  INTO #tmpErrors (Error)
      VALUES                 (1);
    BEGIN TRANSACTION;
  END
GO

-------------------------------------------------------------------------------------------------------------------
IF EXISTS (SELECT * FROM #tmpErrors) ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT>0 BEGIN
  PRINT N'The transacted portion of the database update succeeded.'
  COMMIT TRANSACTION
END
ELSE PRINT N'The transacted portion of the database update failed.'
GO
DROP TABLE #tmpErrors
-------------------------------------------------------------------------------------------------------------------
GO
