#
# Create and Set Variables to be used in VagrantFile
# Commands Below.
#
VAGRANTFILE_API_VERSION = "2"

# Determine host OS
HOST = RbConfig::CONFIG['host_os']

# Set IP address for the virtual machine
VIP = "192.168.10.30"
HOST_VIP = VIP.rpartition(".")[0] + ".1"

# NOT USED: Directory to be shared between VirtualBox VM and host. 
# This will be used by DockerHost for Shared Volume
# HOST_PATH = "~/labkeyDev"
# VM_PATH = "/lk"

HOST_TLS_DIR = "./TLS"
#VM_TLS_DIR = "./TLS"

# 
# Define and start the Vagrant VM 
# 
Vagrant.configure("2") do |config|
    # 
    config.vm.hostname = "rstudiohost"
    config.vm.box = "ubuntu/xenial64"

    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    config.vm.network :private_network, ip: VIP

    # Define provisioner and box 
    config.vm.provision "docker"

    # The following line terminates all ssh connections. Therefore
    # Vagrant will be forced to reconnect. That's a workaround to have 
    # the docker command in the PATH
    config.vm.provision "shell", inline:
    "ps aux | grep 'sshd:' | awk '{print $2}' | xargs kill"
	
	  # Define required plugins
	VAGRANT_PLUGIN_DEPENDENCIES = %w( landrush vagrant-vbguest )

	# install required plugins if necessary
	if ARGV[0] == 'up'
		required_plugins = VAGRANT_PLUGIN_DEPENDENCIES
		missing_plugins = []
		required_plugins.each do |plugin|
		missing_plugins.push(plugin) unless Vagrant.has_plugin? plugin
    end

    if ! missing_plugins.empty?
        install_these = missing_plugins.join(' ')
        puts "Found missing plugins: #{install_these}.  Installing..."
        system( "vagrant plugin install #{install_these}")
		#system( "vagrant #{ARGV.join(" ")}") 
		system( "vagrant reload" )
		#puts "Plugin dependencies loaded, please restart vagrant machine"
		#exec "Vagrant halt"
    end	
	
	#Configure DNS to support TLS
	config.vm.hostname = "rstudiohost.vagrant.test"
	config.landrush.enabled = true
	#config.landrush.upstream = '208.67.222.222'
	config.landrush.host 'rstudiohost.vagrant.test', '192.168.10.30'
	
end

    # Share an additional folder to the guest VM. The first argument is
    # the path on the host to the actual folder. The second argument is
    # the path on the guest to mount the folder. And the optional third
    # argument is a set of non-required options.
    #
    # By default, we will use NFS for sharing folders due to 
    # performance problems with VirtualBox shared folders.
    #config.vm.synced_folder "#{HOST_PATH}", "/lk",  :nfs => true, nfs_udp: false
    # If you want to use VirtualBox shared folders, then use the commands below instead. 
    #config.vm.synced_folder "#{HOST_TLS_DIR}", "{VM_TLS_DIR}", :mount_options => ["dmode=777", "fmode=666"]
	
    config.vm.provider :virtualbox do |vb|
        vb.name = "rstudiohost"
        # Automagically set # of CPU and amount of memory
        # if running on MacOSX
        #  - Give VM 1/4 system memory & access to all cpu cores on the host. 
        # If running on Windows, hard code the value
      if HOST =~ /darwin/
          cpus = `sysctl -n hw.ncpu`.to_i
          # sysctl returns Bytes and we need to convert to MB
          mem = `sysctl -n hw.memsize`.to_i / 1024 / 1024 / 4
      else # sorry Windows folks, I can't help you
          cpus = 2
          mem = 4096
      end

      vb.customize ["modifyvm", :id, "--memory", mem]
      vb.customize ["modifyvm", :id, "--cpus", cpus]

    end
 
end


