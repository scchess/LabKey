; Script generated by the HM NIS Edit Script Wizard.

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "LabKey Server"
!ifndef PRODUCT_VERSION
    !define PRODUCT_VERSION "Dev"
!endif
!ifndef PRODUCT_REVISION
    !define PRODUCT_REVISION "0"
!endif
!define PRODUCT_PUBLISHER "LabKey Software Foundation"
!define PRODUCT_SUPPORT_SITE "http://www.labkey.org"
!define PRODUCT_WEB_SITE "http://www.labkey.org"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\LabKey"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"
!define SERVICE_USER_KEY "SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList"
!define PIPELINE_SERVICE_NAME "LabKeyRemoteServer"
!define LABKEY_INSTALL_TYPE "LabKey Server"
!define PIPELINE_INSTALL_TYPE "Remote Pipeline"

!addincludedir ".\nsis2.46\Include"

; MUI 1.67 compatible ------
!include "MUI.nsh"
!include XML.nsh
!include "zipdll.nsh"
!include ".\ModifyEnv.nsh"
!include ".\LabKeyUtil.nsh"
!include ".\VersionCompare.nsh"
!include ".\trim.nsh"
!include ".\AbortIfBadFramework.nsh"
!include StrUpper.nsh
!include StrReplace.nsh
!include ReplaceInFile.nsh
!include SpecialGroupsSIDs.nsh

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_CUSTOMFUNCTION_ABORT "OnUserAbort"
!define MUI_ICON "./installlogo.ico"
!define MUI_UNICON "./uninstalllogo.ico"

; The name of the exploded top-level tomcat directory
;   Note:   When choosing the binary package it must contain tomcat#.exe (tomcat7.exe) in \bin.
; 	        The resulting zip file must be named to end in just version number for nsi installer to work.

!define TOMCAT_DIR "apache-tomcat-7.0.69"
!define TOMCAT_VERSION "7.0.69"
!define TOMCAT_EXE "tomcat7.exe"

; The name of the postgres installer
!define POSTGRES_INSTALLER "postgresql-9.5.3-1-windows.exe"
!define POSTGRES_SERVICE_SHORT_NAME "LabKey_pgsql-9.5"
!define POSTGRES_SERVICE_DISPLAY_NAME "LabKey Server PostgreSQL Database Server"
!define POSTGRES_VERSION "9.5.3"
!define POSTGRES_INSTDIR "$INSTDIR\Postgres9.5"
!define DEFAULT_POSTGRES_SERVICE_USER "postgres" ;User created by postgres installer
!define POSTGRES_PORT "5432"

; The directory under which all third-party tools will be installed
!define THIRDPARTY_INSTALL_ROOT "$INSTDIR"
; The directory under which all third-party zips will be copied
!define THIRDPARTY_ZIP_ROOT "$INSTDIR\3rdparty"
!define POSTGRES_INSTALLER_ROOT "$INSTDIR\3rdparty\postgres"

; config paths
!define DEFAULT_MS2_CONFIG_PATH "..\..\external"
!define PIPELINE_CONFIG_PATH ".\config-remote"

; ThermoDLLs
!define THERMO_URL "http://www.labkey.org/download/Thermo/thermo_dlls.zip" ; 607KB
!define THERMO_DOWNLOAD_FILE "$TEMP\thermo_dlls.zip"

; Proteomics Binaries
!define PROTEOMICS_BINARIES_URL "http://www.labkey.org/download/proteomicsBinaries/ProteomicsBinaries13.3.zip" ; 82MB
!define PROTEOMICS_DOWNLOAD_FILE "$TEMP\ProteomicsBinaries.zip"

; Compound properties, all consisting of the properties defined above.
!define TOMCAT_SRC_ZIP ".\3rdparty\${TOMCAT_DIR}.zip"
!define POSTGRES_SRC_INSTALL_ROOT ".\3rdparty\postgres\"
!define TOMCAT_TARGET_ZIP "${THIRDPARTY_ZIP_ROOT}\${TOMCAT_DIR}.zip"
!define POSTGRES_TARGET_INSTALLER "${POSTGRES_INSTALLER_ROOT}\${POSTGRES_INSTALLER}"
!define DEFAULT_TOMCAT_HOME "${THIRDPARTY_INSTALL_ROOT}\${TOMCAT_DIR}"
!define TOMCAT_SERVICE_NAME "LabKeyTomcat7"
!define OLD_TOMCAT_SERVICE_NAME "LabKeyTomcat5" ;For legacy upgrade support

; The name of the exploded top-level JRE directory.
; Note: The service LabKeyTomcat7 expects jvm.dll to be in bin\client not bin\server.
;       The 64 bit version has it in \server.  x586 has it in \client.
!define PACKAGED_JRE_DIR "jre1.8.0_92"
!define PACKAGED_JRE_SRC_ZIP ".\3rdparty\${PACKAGED_JRE_DIR}.zip"
!define PACKAGED_JAVA_HOME "${THIRDPARTY_INSTALL_ROOT}\${PACKAGED_JRE_DIR}"
!define PACKAGED_JRE_TARGET_ZIP "${THIRDPARTY_ZIP_ROOT}\${PACKAGED_JRE_DIR}.zip"

; Error strings
!define SUPPORT_URL "https://www.labkey.org/project/home/Support/begin.view"
!define FATAL_ERROR_CONTACT_LABKEY "Please contact LabKey Support for assistance$\n${SUPPORT_URL}$\n$\nUnable to recover. The installer will now exit."

!include "FileFunc.nsh"
!insertmacro Locate
!insertmacro DirState

InstType "Full"
InstType "Upgrade"
InstType "Pipeline"
InstType "Pipeline Upgrade"
InstType "Pipeline Manual"
RequestExecutionLevel admin

Var JavaHome
Var TomcatHome
Var InstalledTomcatServiceName
Var InstalledPipelineServiceName
Var LabKeyXMLLocation
Var InstalledPostgresRoot
Var INCLUDE_THERMO
Var INCLUDE_PROTEOMICS
Var PIPELINE
Var PIPELINE_CONFIG_JMS_HOST
Var PIPELINE_CONFIG_JMS_PORT
Var PIPELINE_CONFIG_MAP_NETWORK_DRIVE
Var PIPELINE_CONFIG_NETWORK_DRIVE_LETTER
Var PIPELINE_CONFIG_NETWORK_DRIVE_PATH
Var PIPELINE_CONFIG_NETWORK_DRIVE_USERNAME
Var PIPELINE_CONFIG_NETWORK_DRIVE_PASSWORD
Var PIPELINE_CONFIG_PATH_MAPPER_LOCAL
Var PIPELINE_CONFIG_PATH_MAPPER_REMOTE

; Welcome page
!define MUI_PAGE_CUSTOMFUNCTION_PRE PreWelcome
!define MUI_PAGE_CUSTOMFUNCTION_LEAVE LeaveWelcome
!define MUI_WELCOMEPAGE_TEXT "This wizard will guide you through the installation/upgrade of $(^NameDA).\r\n\r\nIt is recommended that you close all other applications and disable all virus scanners before starting Setup.\r\n\r\n$_CLICK"
!insertmacro MUI_PAGE_WELCOME

; Select install type (standard or remote pipeline)
Page custom InstallTypePage InstallTypeLeave

; Warning page
Page custom WarningPage WarningSave

; Collect configuration values for remote pipeline server
Page custom PipelineJMSConfigPage PipelineJMSConfigLeave
Page custom PipelinePathMapperConfigPage PipelinePathMapperConfigLeave
Page custom PipelineNetworkDriveConfigPage PipelineNetworkDriveConfigLeave

; MS2 component install choice
Page custom ProteomicsCheckPage ProteomicsCheckSave

; Thermo license page
!define MUI_PAGE_HEADER_TEXT "License Agreement for MSFileReader"
!define MUI_PAGE_HEADER_SUBTEXT "Please review the license terms. MSFileReader is a 3rd party tool that is used to convert MS/MS files from the vendor binary format to the mzXML format."
!define MUI_PAGE_CUSTOMFUNCTION_PRE PreThermoLicense
!insertmacro MUI_PAGE_LICENSE "..\..\external\ThermoLicense.rtf"

; download progress page
Page custom PreProteomicsDownload LeaveProteomicsDownload

; Mail server options page
Page custom MailServerConfigPage MailServerConfigSave

; Database options page
Page custom DatabaseUserConfigPage DatabaseUserConfigSave

; Directory page
!define MUI_PAGE_CUSTOMFUNCTION_PRE PreDirectoryPage
!define MUI_PAGE_CUSTOMFUNCTION_LEAVE LeaveDirectoryPage
!insertmacro MUI_PAGE_DIRECTORY

; Instfiles page
!define MUI_PAGE_CUSTOMFUNCTION_LEAVE LeaveInstfilesPage
!insertmacro MUI_PAGE_INSTFILES

; Finish page
Page custom FinishPage FinishLeave

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"

; MUI end ------

ReserveFile "dbuserconfig.ini"
ReserveFile "dbserviceconfig.ini"
ReserveFile "mailserverconfig.ini"
ReserveFile "warning.ini"
ReserveFile "pipelineWarning.ini"
ReserveFile "proteomicscheck.ini"
ReserveFile "download.ini"
ReserveFile "installtype.ini"
ReserveFile "pipelineJMSConfig.ini"
ReserveFile "pipelineNetworkDriveConfig.ini"
ReserveFile "pipelinePathMapperConfig.ini"
ReserveFile "finish.ini"
!insertmacro MUI_RESERVEFILE_INSTALLOPTIONS

Var POSTGRES_SERVICE_USER
Var POSTGRES_INSTALL_LOCATION
Var POSTGRES_SUPERUSER
Var POSTGRES_SUPERUSER_PASSWORD
Var POSTGRES_SUPERUSER_PASSWORD2
Var SMTP_SERVER
Var SMTP_PORT
Var WARNING_ACCEPTED
Var UPGRADE
Var POSTGRES_INSTALL
Var UPGRADE_TOMCAT
Var UPGRADE_JAVA
Var EXISTING_POSTGRES_INSTALL

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"

OutFile "../../build/installer/Setup_includeJRE.exe"

BrandingText "${PRODUCT_NAME} ${PRODUCT_VERSION}"

InstallDir "$PROGRAMFILES\${PRODUCT_NAME}"
ShowInstDetails hide
ShowUnInstDetails hide
AllowRootDirInstall true

;SetCompress off

Section "-Init"
  LogSet on
SectionEnd

Section "Prereqs" SEC00
  SectionIn 1 3
  AddSize 4119

  StrCmp $INCLUDE_THERMO "1" +2
    Return

  Call AbortIfBadFramework

  Call CheckVCRedist
  Pop $R0
  StrCmp $R0 "-1" +2
    Return ; VC redist present
  SetOutPath "$TEMP"
  File ".\3rdparty\vcredist_x86.exe"
  ExecWait '"$TEMP\vcredist_x86.exe" /qb!'
SectionEnd

Var JavaSearchStr
Var InstalledJavaHome
Section "JRE Installation" SEC01
  SectionIn 1 2 3 4 5
  AddSize 35840
  SetOutPath "${THIRDPARTY_ZIP_ROOT}"

  StrCmp $UPGRADE "1" CheckForCleanup InstallJRE

  CheckForCleanup:

      StrCmp $PIPELINE "0" +4
      DetailPrint "Stopping LabKey Pipeline server ..."
      ExecWait 'net stop $InstalledPipelineServiceName' $0
      DetailPrint "Call to stop pipeline service returned $0"

      StrCmp $PIPELINE "1" +4
      DetailPrint "Stopping Tomcat..."
      ExecWait 'net stop $InstalledTomcatServiceName' $0
      DetailPrint "Call to stop tomcat service returned $0"

      StrCmp $UPGRADE_JAVA "1" 0 Done
      Push $InstalledJavaHome
      Push $INSTDIR
      Call StrStr
      Pop $JavaSearchStr
      ; if our java home is under our install directory, back it up:
      StrCmp "" $JavaSearchStr InstallJRE Cleanup

  Cleanup:
      ; backup the old versions of the JRE
      Rename "$InstalledJavaHome" "$InstalledJavaHome.backup"

  InstallJRE:
      File "${PACKAGED_JRE_SRC_ZIP}"
      !insertmacro ZIPDLL_EXTRACT "${PACKAGED_JRE_TARGET_ZIP}" "${THIRDPARTY_INSTALL_ROOT}\" "<ALL>"
      Delete ${PACKAGED_JRE_TARGET_ZIP}
      StrCpy $JavaHome ${PACKAGED_JAVA_HOME}
  Done:
SectionEnd

Section "PostgreSQL" SEC02
  SectionIn 1
  AddSize 90000
  SetOutPath "${POSTGRES_INSTALLER_ROOT}"
  File "${POSTGRES_SRC_INSTALL_ROOT}\*"

  StrCpy $POSTGRES_SERVICE_USER ${DEFAULT_POSTGRES_SERVICE_USER}

  Push $POSTGRES_SUPERUSER_PASSWORD
  Push "$\""
  Push "$\"$\""
  Call StrReplace
  Pop $R1
  ExecWait '"${POSTGRES_TARGET_INSTALLER}" --mode unattended --unattendedmodeui minimal --servicename "${POSTGRES_SERVICE_SHORT_NAME}" --superaccount $POSTGRES_SUPERUSER --superpassword "$R1" --prefix "${POSTGRES_INSTDIR}" --datadir "${POSTGRES_INSTDIR}\data"  --serverport ${POSTGRES_PORT} --create_shortcuts 0' $0
    StrCmp $0 "0" +3
    MessageBox MB_OK|MB_ICONEXCLAMATION "Failed to install Postgres.$\n${FATAL_ERROR_CONTACT_LABKEY}"
    Quit
  ExecWait 'sc config ${POSTGRES_SERVICE_SHORT_NAME} DisplayName= "${POSTGRES_SERVICE_DISPLAY_NAME}"'
  ExecWait 'net stop ${POSTGRES_SERVICE_SHORT_NAME}' $0
  DetailPrint "Call to stop PostgreSQL service returned $0"
    StrCmp $0 "0" +3
    MessageBox MB_OK|MB_ICONEXCLAMATION "Failed to stop ${POSTGRES_SERVICE_SHORT_NAME}.$\n${FATAL_ERROR_CONTACT_LABKEY}"
    Quit
  DetailPrint "Waiting for Postgres to stop ..."
  Sleep 2000
  Call UpdatePostgresConfig
  ExecWait 'net start  ${POSTGRES_SERVICE_SHORT_NAME}' $0
    StrCmp $0 "0" +3
    MessageBox MB_OK|MB_ICONEXCLAMATION "Failed to start ${POSTGRES_SERVICE_SHORT_NAME}.$\n${FATAL_ERROR_CONTACT_LABKEY}"
    Quit
  DetailPrint "Call to start PostgreSQL service returned $0"
SectionEnd

Section "Tomcat" SEC03
  SectionIn 1
  AddSize 7168
  SetOutPath "${THIRDPARTY_ZIP_ROOT}"
  File "${TOMCAT_SRC_ZIP}"
  !insertmacro ZIPDLL_EXTRACT "${TOMCAT_TARGET_ZIP}" "${THIRDPARTY_INSTALL_ROOT}\" "<ALL>"
  Delete "${TOMCAT_TARGET_ZIP}"

  StrCpy $TomcatHome "${DEFAULT_TOMCAT_HOME}"

  SetOutPath "$TomcatHome\conf"
  File ".\3rdparty\server.xml"

  ; Set up default Tomcat logging:
  SetOutPath "$TomcatHome\lib"
  File ".\lib\log4j-1.2.16.jar"
  File ".\lib\commons-logging-1.2.jar"
  File ".\log4j.properties"

  ; Start with a clean webapps and conf directories to ensure no default webapp security holes:
  RMDir /r "$TomcatHome\webapps"
  RMDir /r "$TomcatHome\conf\Catalina\localhost"
  CreateDirectory "$TomcatHome\webapps\ROOT"
  CreateDirectory "$TomcatHome\conf\Catalina\localhost"

  ; Copy index.html into ROOT webapp (allowing redirect to labkey webapp from server root):
  SetOutPath "$TomcatHome\webapps\ROOT\"
  File ".\3rdparty\root_index.html"
  Rename "$TomcatHome\webapps\ROOT\root_index.html" "$TomcatHome\webapps\ROOT\index.html"

  ExecWait '"$TomcatHome\bin\${TOMCAT_EXE}" //IS//${TOMCAT_SERVICE_NAME} --DependsOn ${POSTGRES_SERVICE_SHORT_NAME} \
        --DisplayName="${PRODUCT_NAME} Apache Tomcat 7.0" --Startup auto --Jvm "$JavaHome\bin\client\jvm.dll" \
        --JavaHome="$JavaHome" --StartClass org.apache.catalina.startup.Bootstrap \
        --StopClass org.apache.catalina.startup.Bootstrap --StartParams start --StopParams stop \
        --Environment "PATH=${THIRDPARTY_INSTALL_ROOT}\bin$\';$\'$JavaHome\bin" --StartMode jvm \
        --StopMode jvm --JvmMs 128 --JvmMx 1024 --LogPath="$TomcatHome\logs" --Classpath="$TomcatHome\bin\bootstrap.jar;$TomcatHome\bin\tomcat-juli.jar"' $0
    StrCmp $0 "0" +3
    MessageBox MB_OK|MB_ICONEXCLAMATION "Failed to install Tomcat.$\n${FATAL_ERROR_CONTACT_LABKEY}"
    Quit
  ; Break Tomcat setup over two commands to keep us under the NSIS 1024 character string limit:
  ExecWait '"$TomcatHome\bin\${TOMCAT_EXE}" //US//${TOMCAT_SERVICE_NAME} \
        --JvmOptions "-Dcatalina.base=$TomcatHome;-Dcatalina.home=$TomcatHome;-Djava.endorsed.dirs=$TomcatHome\endorsed;-Djava.io.tmpdir=$TomcatHome\temp"' $0
    StrCmp $0 "0" +3
    MessageBox MB_OK|MB_ICONEXCLAMATION "Failed to install Tomcat.$\n${FATAL_ERROR_CONTACT_LABKEY}"
    Quit
SectionEnd

Var InstalledPostgresService
Var RegKey
Var VerificationStatus
Var InstalledTomcatHome
Var InstalledPostgresUser
Var InstalledPostgresPassword
Var LeaveOldPostgresInstall
Var PostgresDumpFile
Section "Full Backup and Maintenance" SEC04
  SectionIn 2

  StrCpy $VerificationStatus "InstalledTomcatServiceName"
  StrCmp $InstalledTomcatServiceName "" AbortInstall
  StrCpy $VerificationStatus "JavaHome"
  StrCmp $JavaHome "" AbortInstall
  StrCpy $VerificationStatus "TomcatHome"
  StrCmp $InstalledTomcatHome "" AbortInstall
  EnumRegKey $RegKey HKLM "SOFTWARE\PostgreSQL\Installations" 0
  ReadRegStr $InstalledPostgresService HKLM "SOFTWARE\PostgreSQL\Installations\$RegKey" "Service ID"

  ReadRegStr $POSTGRES_SERVICE_USER ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "PostgresUser"
  StrCmp $POSTGRES_SERVICE_USER "" 0 +2
  StrCpy $POSTGRES_SERVICE_USER ${DEFAULT_POSTGRES_SERVICE_USER}
  EnumRegKey $RegKey HKLM "SOFTWARE\PostgreSQL\Installations" 0
  ReadRegStr $InstalledPostgresRoot ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "PostgresRoot"
  StrCmp $InstalledPostgresRoot "" 0 +2
  ReadRegStr $InstalledPostgresRoot HKLM "SOFTWARE\PostgreSQL\Installations\$RegKey" "Base Directory"
  StrCmp $InstalledPostgresRoot "" 0 +2
  StrCpy $InstalledPostgresRoot "$INSTDIR\PostgreSQL"

  ContextPathCheck:
  IfFileExists "$InstalledTomcatHome\conf\Catalina\localhost\labkey.xml" FoundContextPath
  StrCmp $POSTGRES_INSTALL "0" +4
    MessageBox MB_ABORTRETRYIGNORE "Unable to find labkey.xml in $InstalledTomcatHome\conf\Catalina\localhost.  If you continue, you will have to manually update your context XML file and automatic Postgres upgrade will not be possible." IDAbort QuitImmediate IDRetry ContextPathCheck
    StrCpy $POSTGRES_INSTALL "0"
    GoTo FoundContextPath
  MessageBox MB_ABORTRETRYIGNORE "Unable to find labkey.xml in $InstalledTomcatHome\conf\Catalina\localhost.  If you continue, you will have to manually update your context XML file." IDAbort QuitImmediate IDRetry ContextPathCheck

  FoundContextPath:
  ${xml::LoadFile} "$InstalledTomcatHome\conf\Catalina\localhost\labkey.xml" $0
  ${xml::GotoPath} "/Context/Resource" $0
  ${xml::GetAttribute} "username" $InstalledPostgresUser $0
  ${xml::GetAttribute} "password" $InstalledPostgresPassword $1
  ${xml::Unload}
  StrCmp $0 "-1" LabKeyXmlFailure
  StrCmp $1 "-1" LabKeyXmlFailure StartBackup
  LabKeyXmlFailure:
    MessageBox MB_OK|MB_ICONSTOP "Upgrade failed: Unable to retrieve postgres superuser login from labkey.xml$\nThe installer will now exit. Your LabKey instance should be intact."
    Quit

  StartBackup:

  ExecWait 'net stop $InstalledTomcatServiceName'
  ${Locate} "$INSTDIR\upgrade_backup" "/L=D" FoundBackupFile

  DetailPrint "Deleting any previous backup files. RmDir /r"
  RMDir /r "$INSTDIR\upgrade_backup"
  DetailPrint "Backing up webapp to $INSTDIR\upgrade_backup."
  CreateDirectory "$INSTDIR\upgrade_backup"

  SetOutPath "${POSTGRES_INSTALLER_ROOT}"
  File "${POSTGRES_SRC_INSTALL_ROOT}\*"

  DetailPrint "Backing up previous LabKey Server installation.  This may take several minutes..."

  !insertmacro ReplaceInFile "${POSTGRES_INSTALLER_ROOT}\pgpass.conf" "@@username@@" "$InstalledPostgresUser"
  !insertmacro ReplaceInFile "${POSTGRES_INSTALLER_ROOT}\pgpass.conf" "@@password@@" "$InstalledPostgresPassword"
  Delete "$APPDATA\postgresql\pgpass.conf.backup"
  Rename "$APPDATA\postgresql\pgpass.conf" "$APPDATA\postgresql\pgpass.conf.backup"
  CopyFiles "${POSTGRES_INSTALLER_ROOT}\pgpass.conf" "$APPDATA\postgresql\pgpass.conf"

  ExecWait 'net start $InstalledPostgresService' ;Make sure service is running for dump
  StrCpy $PostgresDumpFile "$INSTDIR\upgrade_backup\labkey.dump"
  ExecWait '"$InstalledPostgresRoot\bin\pg_dumpall.exe" -f "$PostgresDumpFile" --username=$InstalledPostgresUser -p ${POSTGRES_PORT} -o' $0
  DetailPrint "Call to pg_dumpall returned $0"
  StrCmp $0 "0" BackupLabKey
    MessageBox MB_OK|MB_ICONSTOP "Upgrade failed: Unable to dump LabKey Postgres database$\nThe installer will now exit. Your LabKey instance should be intact."
    Call RollbackUpgrade
    Quit

  Call StopOldPostgres
  BackupLabKey:
  Rename "$INSTDIR\labkeywebapp" "$INSTDIR\upgrade_backup\labkeywebapp"
  Rename "$INSTDIR\publish" "$INSTDIR\upgrade_backup\publish"
  Rename "$INSTDIR\modules" "$INSTDIR\upgrade_backup\modules"
  Rename "$INSTDIR\config" "$INSTDIR\upgrade_backup\config"
  Rename "$INSTDIR\bin" "$INSTDIR\upgrade_backup\bin"
  CopyFiles /SILENT "$TomcatHome\conf\Catalina\localhost\labkey.xml" "$INSTDIR\upgrade_backup\labkey.xml"

  StrCmp $POSTGRES_INSTALL "1" 0 +5
  StrCmp $InstalledPostgresRoot ${POSTGRES_INSTDIR} 0 +3
     Call UpgradePostgresMinor ; In-place upgrade for minor version change
     Goto +2
  Call UpgradePostgres

  Delete "$APPDATA\postgresql\pgpass.conf"
  Rename "$APPDATA\postgresql\pgpass.conf.backup" "$APPDATA\postgresql\pgpass.conf"

  StrCmp $UPGRADE_TOMCAT "1" 0 +3
  Call UpgradeTomcat
  GoTo +2
  Call UpdateTomcatService

  Call CleanupOldComponents

  Goto Done
  AbortInstall:
  MessageBox MB_OK|MB_ICONSTOP "Installer variable not set properly: $VerificationStatus"
  QuitImmediate:
  Quit
  Done:
SectionEnd

Section "Pipeline Backup & Maintenance" SEC04P
  SectionIn 4

  StrCpy $VerificationStatus "JavaHome"
  StrCmp $JavaHome "" AbortInstall

  SetOverwrite on
  ${Locate} "$INSTDIR\upgrade_backup" "/L=D" FoundBackupFile

  DetailPrint "Deleting any previous backup files. RmDir /r"
  RMDir /r "$INSTDIR\upgrade_backup"
  DetailPrint "Backing up webapp to $INSTDIR\upgrade_backup."
  CreateDirectory "$INSTDIR\upgrade_backup"

  DetailPrint "Backing up previous LabKey Remote Pipeline installation.  This may take several minutes..."
  Rename "$INSTDIR\labkeywebapp" "$INSTDIR\upgrade_backup\labkeywebapp"
  Rename "$INSTDIR\publish" "$INSTDIR\upgrade_backup\publish"
  Rename "$INSTDIR\modules" "$INSTDIR\upgrade_backup\modules"
  Rename "$INSTDIR\bin" "$INSTDIR\upgrade_backup\bin"

  Goto Done
  AbortInstall:
  MessageBox MB_OK|MB_ICONSTOP "Installer variable not set properly: $VerificationStatus"
  Done:
SectionEnd

Section "Core" SEC05
  SectionIn 1 2 3 4 5

  SetOutPath "$INSTDIR"
  SetOverwrite ifnewer
  SetOutPath "$INSTDIR\labkeywebapp"
  File /r "..\..\build\staging\labkeyWebapp\*"

  ; copy in extra exe's:
  SetOutPath "$INSTDIR\bin"
  File /r /x ".svn" "..\..\external\windows\core\*"

  StrCmp $PIPELINE "1" LabKeyXMLDone
  StrCmp $UPGRADE "1" UpgradeLabKeyXML
  ; copy in our config files:
  SetOutPath "$TomcatHome\conf\Catalina\localhost"
  File "..\..\webapps\labkey.xml"

  ; do replacements
  Push "$TomcatHome\conf\Catalina\localhost\labkey.xml"
  Call ReplaceTomcatConfigParameters

  Goto LabKeyXMLDone

  UpgradeLabKeyXML:
  StrCpy $LabKeyXMLLocation "$TomcatHome\conf\Catalina\localhost\labkey.xml"
  IfFileExists $LabKeyXMLLocation PerformLabKeyXMLReplacements
  GoTo LabKeyXMLDone

  PerformLabKeyXMLReplacements:
  # Our currently supported upgrade version have no contextPath.xml differences

  LabKeyXMLDone:
  SetOutPath "$INSTDIR\modules"
  File "..\..\build\distModules\*.module"

  StrCmp $PIPELINE "1" +2
  CreateDirectory "$INSTDIR\externalModules"

  ;Include MS2 config file for new installs
  StrCmp $INCLUDE_THERMO "0" CopyMS2ConfigDone
  StrCmp $UPGRADE "1" CopyMS2ConfigDone
  CreateDirectory "$INSTDIR\config"
  SetOutPath "$INSTDIR\config"
  StrCmp $PIPELINE "1" 0 +3
    File "${PIPELINE_CONFIG_PATH}\ms2Config.xml"
    Goto CopyMS2ConfigDone
  File "${DEFAULT_MS2_CONFIG_PATH}\ms2Config.xml"
  CopyMS2ConfigDone:

  StrCmp $UPGRADE "1" PipelineConfigDone
  StrCmp $PIPELINE "0" PipelineConfigDone
  CreateDirectory "$INSTDIR\logs"
  SetOutPath "$INSTDIR\config"
  File "${PIPELINE_CONFIG_PATH}\*"
  Push "$INSTDIR\config\pipelineConfig.xml"
  Call ReplacePipelineConfigParameters
  PipelineConfigDone:

  StrCmp $PIPELINE "0" PipelineLibDone
  CreateDirectory "$INSTDIR\pipeline-lib"
  SetOutPath "$INSTDIR\pipeline-lib"
  File "..\..\build\staging\pipelineLib\*"
  PipelineLibDone:

  ;Unpack thermo dlls into bin
  StrCmp $UPGRADE "1" UnpackThermoDone
  StrCmp $INCLUDE_PROTEOMICS "0" UnpackProteomicsDone
  !insertmacro ZIPDLL_EXTRACT "${PROTEOMICS_DOWNLOAD_FILE}" "${THIRDPARTY_INSTALL_ROOT}\bin" "<ALL>"
  UnpackProteomicsDone:
  StrCmp $INCLUDE_THERMO "0" UnpackThermoDone
  !insertmacro ZIPDLL_EXTRACT "${THERMO_DOWNLOAD_FILE}" "${THIRDPARTY_INSTALL_ROOT}\bin" "<ALL>"
  UnpackThermoDone:

  StrCmp $PIPELINE "0" TomcatLibs ;; No tomcat libs for pipeline install
  SetOutPath "$INSTDIR"
  File "..\..\build\staging\tomcat-lib\labkeyBootstrap*.jar"
  Goto Done

  TomcatLibs:
  SetOutPath "$TomcatHome\lib"
  File "..\..\build\staging\tomcat-lib\*.jar"
  ExecWait 'net start ${TOMCAT_SERVICE_NAME}'
  DetailPrint "Waiting for Tomcat to start..."
  Sleep 5000
  Done:
SectionEnd

Section "Pipeline Service" SEC07
  SectionIn 3 5

  ExecWait '"$INSTDIR\config\prunsrv32.exe" //IS//${PIPELINE_SERVICE_NAME} --StdOutput="$INSTDIR\logs\output.log" \
            --StdError="$INSTDIR\logs\output.log" --LogPath="$INSTDIR\logs" --StartMode jvm --JavaHome \
            "$JavaHome" --Jvm "$JavaHome\bin\client\jvm.dll" --JvmMx 384 \
            --Description "Allows this server to run pipeline jobs remotely for a LabKey Server instance" \
            --DisplayName "LabKey Remote Pipeline Server" --Startup auto --Classpath "$INSTDIR\labkeyBootstrap*.jar" \
            --StartClass org.labkey.bootstrap.RemoteServerBootstrap \
            --StartParams="-modulesdir=$INSTDIR\modules;-configdir=$INSTDIR\config;-webappdir=$INSTDIR\labkeywebapp"' $R0
  StrCmp $R0 "0" +2
    MessageBox MB_OK "Unable to install LabKey Pipeline service.$\nOnce installation has finished, uninstall and try again.$\nIf problem persists visit ${SUPPORT_URL} for assistance"
SectionEnd

Section -AdditionalIcons
  SectionIn 1 2
  SetOutPath $INSTDIR
  WriteIniStr "$INSTDIR\Support.url" "InternetShortcut" "URL" "${PRODUCT_SUPPORT_SITE}"
  WriteIniStr "$INSTDIR\LabKey.url" "InternetShortcut" "URL" "http://localhost:8080/labkey/"
  CreateDirectory "$SMPROGRAMS\${PRODUCT_NAME}"
  CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\Support.lnk" "$INSTDIR\Support.url"
  CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\LabKey.lnk" "$INSTDIR\LabKey.url"
  CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\Uninstall.lnk" "$INSTDIR\uninst.exe"
SectionEnd

Section -Register
  SectionIn 1 2 3 4 5
    WriteUninstaller "$INSTDIR\uninst.exe"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Revision" "${PRODUCT_REVISION}"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "InstalledJavaHome" "$JavaHome"
    WriteRegDWord HKLM "${SERVICE_USER_KEY}" "$POSTGRES_SERVICE_USER" ""
SectionEnd
Section -RegisterPipeline
  SectionIn 3 4 5
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Type" "${PIPELINE_INSTALL_TYPE}"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "PipelineServiceName" "${PIPELINE_SERVICE_NAME}"
SectionEnd
Section -RegisterStandard
  SectionIn 1 2
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Type" "${LABKEY_INSTALL_TYPE}"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "TomcatHome" "$TomcatHome"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "TomcatExe" "${TOMCAT_EXE}"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "TomcatServiceName" "${TOMCAT_SERVICE_NAME}"
    ;Update postgres reg string only if we're installing/upgrading postgres
    StrCmp $POSTGRES_INSTALL "0" Done
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "PostgresUninstaller" "${POSTGRES_INSTDIR}\uninstall-postgresql.exe"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "PostgresRoot" "${POSTGRES_INSTDIR}"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "PostgresUser" "$POSTGRES_SERVICE_USER"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "PostgresService" "${POSTGRES_SERVICE_SHORT_NAME}"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "PostgresVersion" "${POSTGRES_VERSION}"
    Done:
SectionEnd
Section -RegisterNewOnly
  SectionIn 1 3
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "InstallDir" "$INSTDIR"
SectionEnd

Function PreWelcome
  !insertmacro MUI_INSTALLOPTIONS_WRITE "ioSpecial.ini" "Settings" "BackEnable" "0"
FunctionEnd
Function LeaveWelcome
  !insertmacro MUI_INSTALLOPTIONS_WRITE "ioSpecial.ini" "Settings" "BackEnable" "1"
FunctionEnd

LangString TEXT_SETUP_TYPE_TITLE ${LANG_ENGLISH} "Installation Type"
LangString TEXT_SETUP_TYPE_SUBTITLE ${LANG_ENGLISH} "Select the type of server to be installed"
Function InstallTypePage
  StrCmp $UPGRADE "1" 0 +2
    Abort
  StrCmp $EXISTING_POSTGRES_INSTALL "1" 0 +5
    !insertmacro MUI_INSTALLOPTIONS_WRITE "installtype.ini" "Field 2" "State" "0"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "installtype.ini" "Field 2" "Flags" "DISABLED"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "installtype.ini" "Field 3" "Text" "Unable to install LabKey Server over an existing Postgres install."
    !insertmacro MUI_INSTALLOPTIONS_WRITE "installtype.ini" "Field 4" "State" "1"
  !insertmacro MUI_HEADER_TEXT "$(TEXT_SETUP_TYPE_TITLE)" "$(TEXT_SETUP_TYPE_SUBTITLE)"
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "installtype.ini"
FunctionEnd
Function InstallTypeLeave
  !insertmacro MUI_INSTALLOPTIONS_READ $PIPELINE "installtype.ini" "Field 4" "State"
  StrCmp $PIPELINE "1" PipelineInstall
    StrCpy $POSTGRES_INSTALL "1"
    Goto Done
  PipelineInstall:
    SetCurInstType 2 ;Pipeline Install
  Done:
FunctionEnd

LangString TEXT_WARNING_TITLE ${LANG_ENGLISH} "WARNING"
LangString TEXT_WARNING_SUBTITLE ${LANG_ENGLISH} "Please indicate understanding of the components of LabKey Server."
Function WarningPage
  StrCmp $UPGRADE "1" Done
  StrCmp $PIPELINE "1" Done
  !insertmacro MUI_HEADER_TEXT "$(TEXT_WARNING_TITLE)" "$(TEXT_WARNING_SUBTITLE)"
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "warning.ini"
  Done:
FunctionEnd
Function WarningSave
  !insertmacro MUI_INSTALLOPTIONS_READ $WARNING_ACCEPTED "warning.ini" "Field 1" "State"
  StrCmp $WARNING_ACCEPTED "1" Accepted
  MessageBox MB_OK|MB_ICONEXCLAMATION "Please check the box to indicate that you understand the type of system being installed."
  Abort
  Accepted:
    ; continue to the next page
FunctionEnd

LangString TEXT_SETUP_PIPELINE_TITLE ${LANG_ENGLISH} "LabKey Pipeline Setup"
LangString TEXT_SETUP_PIPELINE_SUBTITLE ${LANG_ENGLISH} "Choose setup options"
Function PipelineJMSConfigPage
  StrCmp $UPGRADE "1" 0 +2
    Abort
  StrCmp $PIPELINE "0" 0 +2
    Abort
  !insertmacro MUI_HEADER_TEXT "$(TEXT_SETUP_PIPELINE_TITLE)" "$(TEXT_SETUP_PIPELINE_SUBTITLE)"
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "pipelineJMSConfig.ini"
FunctionEnd
Function PipelineJMSConfigLeave
  !insertmacro MUI_INSTALLOPTIONS_READ $PIPELINE_CONFIG_JMS_HOST "pipelineJMSConfig.ini" "Field 3" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $PIPELINE_CONFIG_JMS_PORT "pipelineJMSConfig.ini" "Field 5" "State"
  ;Sanitize
  ${Trim} $PIPELINE_CONFIG_JMS_HOST $PIPELINE_CONFIG_JMS_HOST
  Push $PIPELINE_CONFIG_JMS_HOST
  Call htmlEncode
  Pop $PIPELINE_CONFIG_JMS_HOST
FunctionEnd

Function PipelinePathMapperConfigPage
  StrCmp $UPGRADE "1" 0 +2
    Abort
  StrCmp $PIPELINE "0" 0 +2
    Abort
  !insertmacro MUI_HEADER_TEXT "$(TEXT_SETUP_PIPELINE_TITLE)" "$(TEXT_SETUP_PIPELINE_SUBTITLE)"
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "pipelinePathMapperConfig.ini"
FunctionEnd
Function PipelinePathMapperConfigLeave
  !insertmacro MUI_INSTALLOPTIONS_READ $PIPELINE_CONFIG_PATH_MAPPER_REMOTE "pipelinePathMapperConfig.ini" "Field 3" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $PIPELINE_CONFIG_PATH_MAPPER_LOCAL "pipelinePathMapperConfig.ini" "Field 5" "State"
  ; Sanitize
  ${Trim} $PIPELINE_CONFIG_PATH_MAPPER_LOCAL $PIPELINE_CONFIG_PATH_MAPPER_LOCAL
  ${Trim} $PIPELINE_CONFIG_PATH_MAPPER_REMOTE $PIPELINE_CONFIG_PATH_MAPPER_REMOTE
  !insertmacro StrReplace $PIPELINE_CONFIG_PATH_MAPPER_LOCAL $PIPELINE_CONFIG_PATH_MAPPER_LOCAL "\" "/"
  !insertmacro StrReplace $PIPELINE_CONFIG_PATH_MAPPER_REMOTE $PIPELINE_CONFIG_PATH_MAPPER_REMOTE "\" "/"

  ;Strip trailing '/'
  StrCpy $R0 $PIPELINE_CONFIG_PATH_MAPPER_LOCAL '' -1
  StrCmp $R0 '/' 0 +2
  StrCpy $PIPELINE_CONFIG_PATH_MAPPER_LOCAL $PIPELINE_CONFIG_PATH_MAPPER_LOCAL -1

  ;Strip trailing '/'
  StrCpy $R0 $PIPELINE_CONFIG_PATH_MAPPER_REMOTE '' -1
  StrCmp $R0 '/' 0 +2
  StrCpy $PIPELINE_CONFIG_PATH_MAPPER_REMOTE $PIPELINE_CONFIG_PATH_MAPPER_REMOTE -1

  ;Capitalize drive letter
  StrCpy $R0 $PIPELINE_CONFIG_PATH_MAPPER_LOCAL 1
  Push $R0
  Call StrUpper
  Pop $R0
  StrCpy $PIPELINE_CONFIG_PATH_MAPPER_LOCAL $PIPELINE_CONFIG_PATH_MAPPER_LOCAL '' 1
  StrCpy $PIPELINE_CONFIG_PATH_MAPPER_LOCAL "$R0$PIPELINE_CONFIG_PATH_MAPPER_LOCAL"

  ;Strip leading '/'s
  StrCpy $R0 $PIPELINE_CONFIG_PATH_MAPPER_REMOTE 1
  StrCmp $R0 '/' 0 +3
  StrCpy $PIPELINE_CONFIG_PATH_MAPPER_REMOTE $PIPELINE_CONFIG_PATH_MAPPER_REMOTE '' 1
  GoTo -3

  Push $PIPELINE_CONFIG_PATH_MAPPER_REMOTE
  Call htmlEncode
  Pop $PIPELINE_CONFIG_PATH_MAPPER_REMOTE

  Push $PIPELINE_CONFIG_PATH_MAPPER_LOCAL
  Call htmlEncode
  Pop $PIPELINE_CONFIG_PATH_MAPPER_LOCAL
FunctionEnd

Function PipelineNetworkDriveConfigPage
  StrCmp $UPGRADE "1" 0 +2
    Abort
  StrCmp $PIPELINE "0" 0 +2
    Abort
  Call GetUnusedDriveLetters
  Pop $R0
  !insertmacro MUI_INSTALLOPTIONS_WRITE "pipelineNetworkDriveConfig.ini" "Field 3" "ListItems" "$R0"
  !insertmacro MUI_HEADER_TEXT "$(TEXT_SETUP_PIPELINE_TITLE)" "$(TEXT_SETUP_PIPELINE_SUBTITLE)"
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "pipelineNetworkDriveConfig.ini"
FunctionEnd
Function PipelineNetworkDriveConfigLeave
  !insertmacro MUI_INSTALLOPTIONS_READ $PIPELINE_CONFIG_MAP_NETWORK_DRIVE "pipelineNetworkDriveConfig.ini" "Field 10" "State"
  StrCmp $PIPELINE_CONFIG_MAP_NETWORK_DRIVE "0" Done

  !insertmacro MUI_INSTALLOPTIONS_READ $PIPELINE_CONFIG_NETWORK_DRIVE_LETTER "pipelineNetworkDriveConfig.ini" "Field 3" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $PIPELINE_CONFIG_NETWORK_DRIVE_PATH "pipelineNetworkDriveConfig.ini" "Field 5" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $PIPELINE_CONFIG_NETWORK_DRIVE_USERNAME "pipelineNetworkDriveConfig.ini" "Field 7" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $PIPELINE_CONFIG_NETWORK_DRIVE_PASSWORD "pipelineNetworkDriveConfig.ini" "Field 9" "State"
  ; Sanitize
  StrCpy $PIPELINE_CONFIG_NETWORK_DRIVE_LETTER $PIPELINE_CONFIG_NETWORK_DRIVE_LETTER 1 # Just get the letter
  ${Trim} $PIPELINE_CONFIG_NETWORK_DRIVE_PATH $PIPELINE_CONFIG_NETWORK_DRIVE_PATH
  ${Trim} $PIPELINE_CONFIG_NETWORK_DRIVE_USERNAME $PIPELINE_CONFIG_NETWORK_DRIVE_USERNAME
  Push $PIPELINE_CONFIG_NETWORK_DRIVE_PATH
  Call htmlEncode
  Pop $PIPELINE_CONFIG_NETWORK_DRIVE_PATH
  Push $PIPELINE_CONFIG_NETWORK_DRIVE_USERNAME
  Call htmlEncode
  Pop $PIPELINE_CONFIG_NETWORK_DRIVE_USERNAME
  Push $PIPELINE_CONFIG_NETWORK_DRIVE_PASSWORD
  Call htmlEncode
  Pop $PIPELINE_CONFIG_NETWORK_DRIVE_PASSWORD
  Done:
FunctionEnd

LangString TEXT_PROTEOMICS_TITLE ${LANG_ENGLISH} "Install Proteomics Libraries"
LangString TEXT_PROTEOMICS_SUBTITLE ${LANG_ENGLISH} "MSFileReader is a 3rd party tool that is used to convert MS/MS files from the vendor binary format to the mzXML format."
Function ProteomicsCheckPage
  StrCmp $PIPELINE "1" 0 +4
    StrCpy $INCLUDE_PROTEOMICS "1" ; Pipeline install always gets proteomics binaries.
    StrCpy $INCLUDE_THERMO "1" ; Pipeline install always gets thermo libraries.
    Abort
  StrCmp $UPGRADE "1" Done ; No Thermo libraries for upgrade
  !insertmacro MUI_HEADER_TEXT "$(TEXT_PROTEOMICS_TITLE)" "$(TEXT_PROTEOMICS_SUBTITLE)"
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "proteomicscheck.ini"
  Done:
FunctionEnd
Function ProteomicsCheckSave
  StrCmp $UPGRADE "1" NextPage ; No binaries/libraries for upgrade
  !insertmacro MUI_INSTALLOPTIONS_READ $INCLUDE_PROTEOMICS "proteomicscheck.ini" "Field 1" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $INCLUDE_THERMO "proteomicscheck.ini" "Field 2" "State"

  ReadIniStr $R1 $PLUGINSDIR\proteomicscheck.ini "Field 2" "HWND"

  # Find out which field event called us. 0 = Next button called us. Other values refer to ini Field #
  !insertmacro MUI_INSTALLOPTIONS_READ $R0 "proteomicscheck.ini" "Settings" "State"
  StrCmp $R0 0 NextPage # 0 - Next Button
  StrCmp $R0 1 0 CheckboxUpdated  # 2 - Download Proteomics Binaries checkbox
    ;Update thermo checkbox to reflect its dependency on the proteomics binaries
    StrCmp $INCLUDE_PROTEOMICS "1" 0 DisableThermoCheckbox
      EnableWindow $R1 1
      !insertmacro MUI_INSTALLOPTIONS_WRITE "proteomicscheck.ini" "Field 2" "Flags" ""
      GoTo CheckboxUpdated
    DisableThermoCheckbox:
      SendMessage $R1 ${BM_SETCHECK} 0 "0"
      EnableWindow $R1 0
      !insertmacro MUI_INSTALLOPTIONS_WRITE "proteomicscheck.ini" "Field 2" "Flags" "DISABLED"
  CheckboxUpdated:
    Abort

  NextPage:
FunctionEnd

Function PreThermoLicense
  StrCmp $INCLUDE_THERMO "1" +2 ; Don't display Thermo license if user doesn't want libraries.
    Abort
FunctionEnd

LangString TEXT_PROTEOMICS_DOWNLOAD_TITLE ${LANG_ENGLISH} "Download Proteomics Libraries"
LangString TEXT_PROTEOMICS_DOWNLOAD_SUBTITLE ${LANG_ENGLISH} "Downloading additional software for extended MS2 support"
Function PreProteomicsDownload
  StrCmp $INCLUDE_PROTEOMICS "1" +2 ; only show page if downloading
    Abort
  !insertmacro MUI_HEADER_TEXT "$(TEXT_PROTEOMICS_DOWNLOAD_TITLE)" "$(TEXT_PROTEOMICS_DOWNLOAD_SUBTITLE)"
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "download.ini"
FunctionEnd
Function LeaveProteomicsDownload
  DownloadProteomics:
  StrCpy $INCLUDE_PROTEOMICS "1" ;In case retrying from thermo download
  inetc::get ${PROTEOMICS_BINARIES_URL} ${PROTEOMICS_DOWNLOAD_FILE} /END
  Pop $R0 ;Get the return value
    StrCmp $R0 "OK" DownloadThermo
    MessageBox MB_ICONEXCLAMATION|MB_RETRYCANCEL "Unable to download proteomics binaries: $R0$\n${PRODUCT_NAME} does not require this software and it can be added manually at a later time if this problem persists.$\nPress cancel to install ${PRODUCT_NAME} without them.$\nFor additional assistance, visit ${SUPPORT_URL}" IDRetry DownloadProteomics IDCancel ProteomicsDownloadFailure
  ProteomicsDownloadFailure:
    StrCpy $INCLUDE_PROTEOMICS "0"

  DownloadThermo:
  StrCmp $INCLUDE_THERMO "0" Done
  StrCmp $INCLUDE_PROTEOMICS "0" 0 +2
    MessageBox MB_ICONEXCLAMATION|MB_RETRYCANCEL "Proteomics binaries are required for MSFileReader.$\nPress cancel to install ${PRODUCT_NAME} without MSFileReader.$\nFor additional assistance, visit ${SUPPORT_URL}" IDRetry DownloadProteomics IDCancel ThermoDownloadFailure
  inetc::get ${THERMO_URL} ${THERMO_DOWNLOAD_FILE} /END
  Pop $R0 ;Get the return value
    StrCmp $R0 "OK" Done
    MessageBox MB_ICONEXCLAMATION|MB_RETRYCANCEL "Unable to download MSFileReader: $R0$\n${PRODUCT_NAME} does not require this software and it can be added manually at a later time if this problem persists.$\nPress cancel to install ${PRODUCT_NAME} without MSFileReader.$\nFor additional assistance, visit ${SUPPORT_URL}" IDRetry DownloadThermo IDCancel ThermoDownloadFailure
    Quit
  ThermoDownloadFailure:
    StrCpy $INCLUDE_THERMO "0"
  Done:
FunctionEnd

LangString TEXT_MAILSERVER_CONFIG_TITLE ${LANG_ENGLISH} "SMTP Connection Settings"
LangString TEXT_MAILSERVER_CONFIG_SUBTITLE ${LANG_ENGLISH} "Please enter connection information for your SMTP email server."
Function MailServerConfigPage
  StrCmp $PIPELINE "1" Done
  StrCmp $UPGRADE "1" Done
  !insertmacro MUI_HEADER_TEXT "$(TEXT_MAILSERVER_CONFIG_TITLE)" "$(TEXT_MAILSERVER_CONFIG_SUBTITLE)"
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "mailserverconfig.ini"
  Done:
FunctionEnd

Function MailServerConfigSave
  !insertmacro MUI_INSTALLOPTIONS_READ $SMTP_SERVER "mailserverconfig.ini" "Field 2" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $SMTP_PORT "mailserverconfig.ini" "Field 3" "State"
FunctionEnd

LangString TEXT_DBUSER_CONFIG_TITLE ${LANG_ENGLISH} "Database User Settings"
LangString TEXT_DBUSER_CONFIG_SUBTITLE ${LANG_ENGLISH} "Please provide a username and password for the database superuser."
Function DatabaseUserConfigPage
  StrCmp $UPGRADE "1" Done
  StrCmp $PIPELINE "1" Done
  ; We always display the UI for the database users.  Usernames and passwords
  ; can't have defaults for security reasons:
  !insertmacro MUI_HEADER_TEXT "$(TEXT_DBUSER_CONFIG_TITLE)" "$(TEXT_DBUSER_CONFIG_SUBTITLE)"
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "dbuserconfig.ini"
  Call DatabaseUserConfigSave
  Done:
FunctionEnd
Function DatabaseUserConfigSave
  !insertmacro MUI_INSTALLOPTIONS_READ $POSTGRES_SUPERUSER "dbuserconfig.ini" "Field 2" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $POSTGRES_SUPERUSER_PASSWORD "dbuserconfig.ini" "Field 3" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $POSTGRES_SUPERUSER_PASSWORD2 "dbuserconfig.ini" "Field 4" "State"
  Push $POSTGRES_SUPERUSER_PASSWORD
  Push $POSTGRES_SUPERUSER_PASSWORD2
  Call VerifyPassword
FunctionEnd

LangString TEXT_DIRECTORY_TITLE ${LANG_ENGLISH} "Install location"
LangString TEXT_DIRECTORY_SUBTITLE ${LANG_ENGLISH} "Please choose an install location"
Function PreDirectoryPage
  StrCmp $UPGRADE "0" +2
  Abort
  !insertmacro MUI_HEADER_TEXT "$(TEXT_DIRECTORY_TITLE)" "$(TEXT_DIRECTORY_SUBTITLE)"
FunctionEnd
Function LeaveDirectoryPage
  IfFileExists ${POSTGRES_INSTDIR} 0 Done
    MessageBox MB_OK|MB_ICONEXCLAMATION "Postgres data from a previous install is present in ${POSTGRES_INSTDIR}.$\nPlease backup or remove ${POSTGRES_INSTDIR} before continuing."
    Abort
  Done:
FunctionEnd
Function LeaveInstfilesPage
; save logs
  LogSet off
  Rename "$INSTDIR\install.log" "$INSTDIR\install_debug.log"
  DetailPrint "Complete"
  StrCpy $0 "$INSTDIR\install.log"
  Push $0
  Call DumpLog
FunctionEnd

Var FINISH_FLAG
LangString TEXT_FINISH_TITLE ${LANG_ENGLISH} "Setup Finished"
LangString TEXT_FINISH_SUBTITLE ${LANG_ENGLISH} "Thank you"
Function FinishPage
  StrCmp $PIPELINE "1" FinishPipelineInstall FinishStandardInstall

  FinishStandardInstall:
    !insertmacro MUI_INSTALLOPTIONS_WRITE "finish.ini" "Field 1" "Text" "Open browser to ${PRODUCT_NAME}"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "finish.ini" "Field 2" "Top" "9999"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "finish.ini" "Field 2" "Bottom" "9999"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "finish.ini" "Field 2" "Flags" "DISABLED"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "finish.ini" "Field 3" "Top" "9999"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "finish.ini" "Field 3" "Bottom" "9999"
    Goto Display
  FinishPipelineInstall:
    !insertmacro MUI_INSTALLOPTIONS_WRITE "finish.ini" "Field 1" "Text" "Start LabKey Remote Pipeline Server service."
    !insertmacro MUI_INSTALLOPTIONS_WRITE "finish.ini" "Field 3" "Text" "Configuration for the Remote Pipeline Server can be found at $INSTDIR\config\pipelineConfig.xml"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "finish.ini" "Field 4" "Text" "The service will start automatically at Windows startup time."
    Goto Display

  Display:
  !insertmacro MUI_HEADER_TEXT "$(TEXT_FINISH_TITLE)" "$(TEXT_FINISH_SUBTITLE)"
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "finish.ini"
FunctionEnd
Function FinishLeave
  !insertmacro MUI_INSTALLOPTIONS_READ $FINISH_FLAG "finish.ini" "Field 1" "State"
  StrCmp $FINISH_FLAG "1" 0 Done
  StrCmp $PIPELINE "1" FinishPipelineInstall FinishStandardInstall

  FinishStandardInstall:
    ExecShell open "http://localhost:8080/labkey"
    Goto Done
  FinishPipelineInstall:
    Exec 'net start ${PIPELINE_SERVICE_NAME}'
    Goto Done
  Done:
FunctionEnd

Function FoundBackupFile
  MessageBox MB_OKCANCEL|MB_ICONQUESTION "Backup files from a previous LabKey upgrade has been found at $R8.$\n$\nContinuing will overwrite these files with new backup data." IDCANCEL Exit IDOK Continue
  Exit:
  Quit
  Continue:
FunctionEnd

Function UpgradePostgresMinor ; Minor version upgrade requires less work (e.g. 9.2.1 -> 9.2.3)
    StrCmp ${DEFAULT_POSTGRES_SERVICE_USER} $POSTGRES_SERVICE_USER 0 UpgradeWithSpecifiedServiceUser

    ExecWait '"${POSTGRES_TARGET_INSTALLER}" --mode unattended --unattendedmodeui minimal' $R0
    StrCmp "0" $R0 PostgresMinorUpgradeSuccess
    MessageBox MB_OK|MB_ICONEXCLAMATION "Postgres upgrade failed: $0$\n${FATAL_ERROR_CONTACT_LABKEY}"

    Goto PostgresMinorUpgradeSuccess

    UpgradeWithSpecifiedServiceUser: ;TODO: Remove once upgrading from 12.3 is deprecated
        ExecWait 'net user $POSTGRES_SERVICE_USER "postgres"' ;password validation fails for some reason, unless it is this
        ExecWait '"${POSTGRES_TARGET_INSTALLER}" --mode unattended --unattendedmodeui minimal' $0

        pwgen::GeneratePassword 14
        Pop $0
        ExecWait 'net user $POSTGRES_SERVICE_USER "$0"' ;set password back to something reasonable
        ExecWait 'sc.exe config $InstalledPostgresService password= $0'

    PostgresMinorUpgradeSuccess:
    StrCpy $LeaveOldPostgresInstall "1" ; Don't uninstall Postgres. New instance is just installed on top of the old one
FunctionEnd

Function UpgradePostgres ; For major version upgrade (e.g. 9.1.x -> 9.2.x)
    Call StopOldPostgres

    ExecWait '"${POSTGRES_TARGET_INSTALLER}" --mode unattended --unattendedmodeui minimal --servicename "${POSTGRES_SERVICE_SHORT_NAME}" --superaccount $InstalledPostgresUser --superpassword "$InstalledPostgresPassword" --prefix "${POSTGRES_INSTDIR}" --datadir "${POSTGRES_INSTDIR}\data"  --serverport ${POSTGRES_PORT} --create_shortcuts 0' $0
    StrCmp "0" $0 PostgresInstallSucess
    MessageBox MB_OK|MB_ICONEXCLAMATION "Postgres upgrade failed: $0$\n${FATAL_ERROR_CONTACT_LABKEY}"
    Quit

    PostgresInstallSucess:
    ExecWait 'sc config ${POSTGRES_SERVICE_SHORT_NAME} DisplayName= "${POSTGRES_SERVICE_DISPLAY_NAME}"'
    Call StopNewPostgres
    Call UpdatePostgresConfig
    Call StartNewPostgres

    ExecWait '"${POSTGRES_INSTDIR}\bin\psql" --file="$PostgresDumpFile" postgres $InstalledPostgresUser' $0
    StrCmp $0 0 +3
    MessageBox MB_OK "Unable to restore old database. Dump file located at $PostgresDumpFile$\nPlease contact LabKey Support for assistance with a manual restore$\n${SUPPORT_URL}$\n$\nUnable to rollback, upgrade will now exit."
    Quit

    Call StopNewPostgres
FunctionEnd

Function StartOldPostgres
    Push $0
    ExecWait 'net start $InstalledPostgresService' $0
    DetailPrint "Call to start $InstalledPostgresService returned $0"
    StrCmp $0 "0" Done
    MessageBox MB_OK|MB_ICONEXCLAMATION "Failed to start $InstalledPostgresService.$\n${FATAL_ERROR_CONTACT_LABKEY}"
    Call RollbackUpgrade
    Quit
    Done:
    Pop $0
FunctionEnd

Function StartNewPostgres
    Push $0
    ExecWait 'net start ${POSTGRES_SERVICE_SHORT_NAME}' $0
    DetailPrint "Call to start ${POSTGRES_SERVICE_SHORT_NAME} returned $0"
    StrCmp $0 "0" Done
    MessageBox MB_OK|MB_ICONEXCLAMATION "Failed to start ${POSTGRES_SERVICE_SHORT_NAME}.$\n${FATAL_ERROR_CONTACT_LABKEY}"
    Call RollbackUpgrade
    Quit
    Done:
    Pop $0
FunctionEnd

Function StopOldPostgres
    Push $0
    ExecWait 'net stop $InstalledPostgresService' $0
    DetailPrint "Call to stop $InstalledPostgresService returned $0"
    DetailPrint "Waiting for Postgres to stop ..."
    Sleep 2000
    StrCmp $0 "0" Done
    MessageBox MB_OK|MB_ICONEXCLAMATION "Failed to stop $InstalledPostgresService.$\n${FATAL_ERROR_CONTACT_LABKEY}"
    Call RollbackUpgrade
    Quit
    Done:
    Pop $0
FunctionEnd

Function StopNewPostgres
    Push $0
    ExecWait 'net stop ${POSTGRES_SERVICE_SHORT_NAME}' $0
    DetailPrint "Call to stop ${POSTGRES_SERVICE_SHORT_NAME} returned $0"
    DetailPrint "Waiting for Postgres to stop ..."
    Sleep 2000
    StrCmp $0 "0" Done
    MessageBox MB_OK|MB_ICONEXCLAMATION "Failed to stop ${POSTGRES_SERVICE_SHORT_NAME}.$\n${FATAL_ERROR_CONTACT_LABKEY}"
    Call RollbackUpgrade
    Quit
    Done:
    Pop $0
FunctionEnd

Function UpgradeTomcat
    SetOutPath "${THIRDPARTY_ZIP_ROOT}"
    File "${TOMCAT_SRC_ZIP}"
    !insertmacro ZIPDLL_EXTRACT "${TOMCAT_TARGET_ZIP}" "${THIRDPARTY_INSTALL_ROOT}\" "<ALL>"
    Delete "${TOMCAT_TARGET_ZIP}"

    ; Set up default Tomcat logging:
    SetOutPath "${DEFAULT_TOMCAT_HOME}\lib"
    File ".\lib\log4j-1.2.16.jar"
    File ".\lib\commons-logging-1.2.jar"
    File ".\log4j.properties"

    ; Start with a clean webapps and conf directories to ensure no default webapp security holes:
    RMDir /r "${DEFAULT_TOMCAT_HOME}\webapps"
    RMDir /r "${DEFAULT_TOMCAT_HOME}\conf\Catalina\localhost"
    CreateDirectory "${DEFAULT_TOMCAT_HOME}\webapps\ROOT"
    CreateDirectory "${DEFAULT_TOMCAT_HOME}\conf\Catalina\localhost"

    SetOutPath "${DEFAULT_TOMCAT_HOME}\conf"
    File ".\3rdparty\server.xml"
    CopyFiles /SILENT "$InstalledTomcatHome\webapps\ROOT\index.html" "${DEFAULT_TOMCAT_HOME}\webapps\ROOT\index.html"
    CopyFiles /SILENT "$InstalledTomcatHome\conf\Catalina\localhost\labkey.xml" "${DEFAULT_TOMCAT_HOME}\conf\Catalina\localhost\labkey.xml"

    Call UpdateTomcatService
FunctionEnd

;Update tomcat service if tomcat is not being upgraded
;Delete and remake //US doesn't seem to work
Function UpdateTomcatService
    ExecWait '"${DEFAULT_TOMCAT_HOME}\bin\${TOMCAT_EXE}" //DS//$InstalledTomcatServiceName --JavaHome="$JavaHome"'

    ExecWait '"${DEFAULT_TOMCAT_HOME}\bin\${TOMCAT_EXE}" //IS//${TOMCAT_SERVICE_NAME} --DependsOn ${POSTGRES_SERVICE_SHORT_NAME} \
       --DisplayName="${PRODUCT_NAME} Apache Tomcat 7.0" --Startup auto --Jvm "$JavaHome\bin\client\jvm.dll" \
       --JavaHome="$JavaHome" --StartClass org.apache.catalina.startup.Bootstrap \
       --StopClass org.apache.catalina.startup.Bootstrap --StartParams start --StopParams stop \
       --Environment "PATH=${THIRDPARTY_INSTALL_ROOT}\bin$\';$\'$JavaHome\bin" --StartMode jvm \
       --StopMode jvm --JvmMs 128 --JvmMx 1024 --LogPath="${DEFAULT_TOMCAT_HOME}\logs" --Classpath="${DEFAULT_TOMCAT_HOME}\bin\bootstrap.jar;${DEFAULT_TOMCAT_HOME}\bin\tomcat-juli.jar"' $0
      StrCmp $0 "0" +3
      MessageBox MB_OK|MB_ICONEXCLAMATION "Failed to upgrade Tomcat.$\n${FATAL_ERROR_CONTACT_LABKEY}"
      Quit
    ; Break Tomcat setup over two commands to keep us under the NSIS 1024 character string limit:
    ExecWait '"${DEFAULT_TOMCAT_HOME}\bin\${TOMCAT_EXE}" //US//${TOMCAT_SERVICE_NAME} \
       --JvmOptions "-Dcatalina.base=${DEFAULT_TOMCAT_HOME};-Dcatalina.home=${DEFAULT_TOMCAT_HOME};-Djava.endorsed.dirs=${DEFAULT_TOMCAT_HOME}\endorsed;-Djava.io.tmpdir=${DEFAULT_TOMCAT_HOME}\temp"' $0
      StrCmp $0 "0" +3
      MessageBox MB_OK|MB_ICONEXCLAMATION "Failed to upgrade Tomcat.$\n${FATAL_ERROR_CONTACT_LABKEY}"
      Quit
FunctionEnd

Function UpdatePostgresConfig
  UserMgr::GetLocalizedStdAccountName "${SG_USERS}"
  Pop $0

  !insertmacro ReplaceInFile "${POSTGRES_INSTDIR}\data\postgresql.conf" "# join_collapse_limit = 8" "join_collapse_limit = 10"
  !insertmacro ReplaceInFile "${POSTGRES_INSTDIR}\data\postgresql.conf" "#join_collapse_limit = 8" "join_collapse_limit = 10"

  !insertmacro ReplaceInFile "${POSTGRES_INSTDIR}\data\postgresql.conf" "shared_buffers = 32MB" "shared_buffers = 256MB"

  !insertmacro ReplaceInFile "${POSTGRES_INSTDIR}\data\postgresql.conf" "# work_mem = 1MB" "work_mem = 4MB"
  !insertmacro ReplaceInFile "${POSTGRES_INSTDIR}\data\postgresql.conf" "#work_mem = 1MB" "work_mem = 4MB"

  !insertmacro ReplaceInFile "${POSTGRES_INSTDIR}\data\postgresql.conf" "# maintenance_work_mem = 16MB" "maintenance_work_mem  = 512MB"
  !insertmacro ReplaceInFile "${POSTGRES_INSTDIR}\data\postgresql.conf" "#maintenance_work_mem = 16MB" "maintenance_work_mem  = 512MB"

  !insertmacro ReplaceInFile "${POSTGRES_INSTDIR}\data\postgresql.conf" "# checkpoint_segments = 3" "checkpoint_segments  = 10"
  !insertmacro ReplaceInFile "${POSTGRES_INSTDIR}\data\postgresql.conf" "#checkpoint_segments = 3" "checkpoint_segments  = 10"

  !insertmacro ReplaceInFile "${POSTGRES_INSTDIR}\data\postgresql.conf" "# enable_material = on" "enable_material  = off"
  !insertmacro ReplaceInFile "${POSTGRES_INSTDIR}\data\postgresql.conf" "#enable_material = on" "enable_material  = off"

  !insertmacro ReplaceInFile "${POSTGRES_INSTDIR}\data\postgresql.conf" "# random_page_cost = 4.0" "random_page_cost = 1.5"
  !insertmacro ReplaceInFile "${POSTGRES_INSTDIR}\data\postgresql.conf" "#random_page_cost = 4.0" "random_page_cost = 1.5"

  !insertmacro ReplaceInFile "${POSTGRES_INSTDIR}\data\postgresql.conf" "# effective_cache_size = 128MB" "effective_cache_size = 756MB"
  !insertmacro ReplaceInFile "${POSTGRES_INSTDIR}\data\postgresql.conf" "#effective_cache_size = 128MB" "effective_cache_size = 756MB"

  ExecWait 'cacls "${POSTGRES_INSTDIR}\data\postgresql.conf" /E /G $0:R'
FunctionEnd

Function CleanupOldComponents
    StrCmp $POSTGRES_INSTALL "1" 0 CleanupOldTomcat
    StrCmp $LeaveOldPostgresInstall "1" CleanupOldTomcat

    LocatePostgresUninstaller:
    ReadRegStr $POSTGRES_INSTALL_LOCATION ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "PostgresUninstaller"
    IfFileExists $POSTGRES_INSTALL_LOCATION UninstallOldPostgres
    ReadRegStr $POSTGRES_INSTALL_LOCATION ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "PostgresInstaller"
    IfFileExists $POSTGRES_INSTALL_LOCATION UninstallOldPostgresMsi CleanupOldTomcat

    UninstallOldPostgresMsi:
    ExecWait 'msiexec /x "$POSTGRES_INSTALL_LOCATION" /qr DOSERVICE=1 SERVICENAME="LabKey Server PostgreSQL Database Server" SERVICEDOMAIN=%COMPUTERNAME% SERVICEACCOUNT=$POSTGRES_SERVICE_USER BASEDIR="$INSTDIR\PostgreSQL"'
    RMDir /r "$InstalledPostgresRoot"
    RMDir /r "${POSTGRES_INSTALLER_ROOT}"
    Goto CleanupOldTomcat

    UninstallOldPostgres:
    ExecWait '"$POSTGRES_INSTALL_LOCATION" --mode unattended --unattendedmodeui minimal'
    RMDir /r "$InstalledPostgresRoot"
    RMDir /r "${POSTGRES_INSTALLER_ROOT}"
    Goto CleanupOldTomcat

    CleanupOldTomcat:
    StrCmp $UPGRADE_TOMCAT "1" 0 Done
    StrCmp $InstalledTomcatServiceName ${TOMCAT_SERVICE_NAME} Done
    ExecWait '"${DEFAULT_TOMCAT_HOME}\bin\${TOMCAT_EXE}" //DS//$InstalledTomcatServiceName --JavaHome="$JavaHome"'
    DetailPrint "Tomcat service deletion returned $0"
    RMDir /r "$InstalledTomcatHome"

    Done:
FunctionEnd

Function RollbackUpgrade
    DetailPrint "Upgrade failed. Attempting to roll back."

    Delete "$APPDATA\postgresql\pgpass.conf"
    Rename "$APPDATA\postgresql\pgpass.conf.backup" "$APPDATA\postgresql\pgpass.conf"
    ;TODO: Use stack or a script to store rollback commands.
    StrCmp ${TOMCAT_SERVICE_NAME} $InstalledTomcatServiceName RollbackJavaUpgrade
    ExecWait '"${DEFAULT_TOMCAT_HOME}\bin\${TOMCAT_EXE}" //DS//${TOMCAT_SERVICE_NAME}'

    RollbackJavaUpgrade:
    StrCmp $InstalledJavaHome ${PACKAGED_JAVA_HOME} RollbackPostgresUpgrade
    RmDir /r "${PACKAGED_JAVA_HOME}"
    Rename "$InstalledJavaHome.backup" "$InstalledJavaHome"

    RollbackPostgresUpgrade:
    StrCmp $InstalledPostgresRoot ${POSTGRES_INSTDIR} Done
    ;Uninstall new Postgres?

    Done:
    ExecWait 'net start $InstalledPostgresService'
    ExecWait 'net start $InstalledTomcatServiceName'
FunctionEnd

Var InstallLocation
Var InstalledVersion
Var InstalledVersionNumber
Var InstalledRevision
Var InstalledRevisionNumber
Var FullInstalledVersionNumber
Var ProductVersionNumber
Var ProductRevisionNumber
Var FullProductVersionNumber
Var InstallType
Var ActiveRegKey
Var InstalledPostgresVersion
Var InstalledTomcatVersion
Var InstalledTomcatExe
Var InstalledJavaVersion
Function .onInit
  ;Extract InstallOptions INI files
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT "dbuserconfig.ini"
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT "dbserviceconfig.ini"
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT "mailserverconfig.ini"
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT "warning.ini"
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT "pipelineWarning.ini"
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT "proteomicscheck.ini"
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT "download.ini"
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT "installtype.ini"
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT "pipelineJMSConfig.ini"
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT "pipelineNetworkDriveConfig.ini"
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT "pipelinePathMapperConfig.ini"
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT "finish.ini"

  ; Language detection: http://nsis.sourceforge.net/Detect_User_Locale_Information_(Language,_Country,_LangID,_etc.)
  !define LOCALE_SNATIVELANGNAME '0x4' ;System native language name [Cool]
  System::Call 'kernel32::GetSystemDefaultLangID() i .r0'
  System::Call 'kernel32::GetLocaleInfoA(i 1024, i ${LOCALE_SNATIVELANGNAME}, t .r1, i ${NSIS_MAX_STRLEN}) i r0'
  StrCmp $1 "English" CheckForLabKeyInstallation
  MessageBox MB_OK|MB_ICONSTOP "Your system language is: $1.$\nThe LabKey Windows installer currently only supports English.$\nVisit http://labkey.com/download-labkey-server for information on performing a manual install."
  Abort

  CheckForLabKeyInstallation:
  ClearErrors
  StrCpy $ActiveRegKey "${PRODUCT_UNINST_KEY}"
  StrCpy $InstalledTomcatServiceName "${TOMCAT_SERVICE_NAME}"
  ReadRegStr $InstallLocation ${PRODUCT_UNINST_ROOT_KEY} "$ActiveRegKey" "InstallDir"
  StrCmp $InstallLocation "" LabKeyAbsent LabKeyPresent
  LabKeyPresent:
    ReadRegStr $InstalledTomcatServiceName ${PRODUCT_UNINST_ROOT_KEY} "$ActiveRegKey" "TomcatServiceName"
    StrCmp $InstalledTomcatServiceName "" 0 +2
    StrCpy $InstalledTomcatServiceName "${OLD_TOMCAT_SERVICE_NAME}"
    ClearErrors
    ReadRegStr $InstalledJavaHome ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "InstalledJavaHome"
    ReadRegStr $InstallType ${PRODUCT_UNINST_ROOT_KEY} "$ActiveRegKey" "Type"
    StrCmp $InstallType "" 0 +2
    StrCpy $InstallType "${LABKEY_INSTALL_TYPE}"
    ReadRegStr $InstalledVersion ${PRODUCT_UNINST_ROOT_KEY} "$ActiveRegKey" "DisplayVersion"
    ReadRegStr $InstalledRevision ${PRODUCT_UNINST_ROOT_KEY} "$ActiveRegKey" "Revision"
    ${GetVersionNumber} $InstalledVersion $InstalledVersionNumber
    ${GetVersionNumber} ${PRODUCT_VERSION} $ProductVersionNumber
    ${GetVersionNumber} $InstalledRevision $InstalledRevisionNumber
    ${GetVersionNumber} ${PRODUCT_REVISION} $ProductRevisionNumber
    StrCmp $InstalledVersionNumber "" BadVersionNumber
    ${VersionCompare} $InstalledVersionNumber "14.1" $R0
    StrCmp $R0 "2" UnsupportedUpgrade 0
    StrCmp $ProductVersionNumber "" BadVersionNumber
    StrCpy $FullInstalledVersionNumber "$InstalledVersionNumber.$InstalledRevisionNumber"
    StrCpy $FullProductVersionNumber "$ProductVersionNumber.$ProductRevisionNumber"
    ${VersionCompare} $FullInstalledVersionNumber $FullProductVersionNumber $R0
    StrCmp $R0 "1" +2
    MessageBox MB_YESNO|MB_ICONQUESTION "An existing installation of ${PRODUCT_NAME} has been found at $InstallLocation.$\n$\nOnly one copy of LabKey may be installed at a time.  Do you want to upgrade this installation?" IDYES Upgrade IDNO Exit
    MessageBox MB_OK|MB_ICONEXCLAMATION "A newer version of ${PRODUCT_NAME} has been found at $InstallLocation.$\n$\nRemove ${PRODUCT_NAME} ($InstalledVersion r$InstalledRevision) to proceed." IDOK Exit
    BadVersionNumber:
    MessageBox MB_YESNO|MB_ICONQUESTION "An existing installation of ${PRODUCT_NAME} has been found at $InstallLocation.$\n$\nVersion numbers are not comparable.$\nAre you sure you want to attempt upgrade?$\n$\n$\tExisting:$\t$InstalledVersion r$InstalledRevision$\n$\tUpgrade:$\t${PRODUCT_VERSION} r${PRODUCT_REVISION}" IDYES Upgrade IDNO Exit
  Upgrade:
    SetCurInstType 1
    StrCpy $UPGRADE "1"
    StrCpy $INSTDIR $InstallLocation
    StrCmp $InstallType "${PIPELINE_INSTALL_TYPE}" PipelineUpgrade
    StrCpy $PIPELINE "0"

  CheckJavaVersion:
    StrCmp $InstalledJavaHome "${PACKAGED_JAVA_HOME}" CheckPostgresVersion
    Push $InstalledJavaHome
    Push $INSTDIR
    Call StrStr
    Pop $JavaSearchStr
    StrCmp $JavaSearchStr "" +3 ; external java
    StrLen $0 $INSTDIR
    IntOp $0 $0 + 1
    StrCpy $InstalledJavaVersion $InstalledJavaHome "" $0
    StrCpy $UPGRADE_JAVA "1"

  CheckPostgresVersion:
    EnumRegKey $RegKey HKLM "SOFTWARE\PostgreSQL\Installations" 0
    ReadRegStr $InstalledPostgresVersion HKLM "SOFTWARE\PostgreSQL\Installations\$RegKey" "Version"

    ${VersionCompare} $InstalledPostgresVersion ${POSTGRES_VERSION} $R0
    StrCmp $R0 "2" OldPostgresVersion GoodPostgresVersion

  OldPostgresVersion:
    StrCpy $POSTGRES_INSTALL "1"
    Goto CheckTomcatVersion

  GoodPostgresVersion:
    StrCpy $POSTGRES_INSTALL "0"
    Goto CheckTomcatVersion

  CheckTomcatVersion:
    ReadRegStr $JavaHome ${PRODUCT_UNINST_ROOT_KEY} "$ActiveRegKey" "InstalledJavaHome"
    ReadRegStr $InstalledTomcatHome ${PRODUCT_UNINST_ROOT_KEY} "$ActiveRegKey" "TomcatHome"
    ReadRegStr $InstalledTomcatExe ${PRODUCT_UNINST_ROOT_KEY} "$ActiveRegKey" "TomcatExe"
    ${GetTrailingVersionNumber} $InstalledTomcatHome $InstalledTomcatVersion
    ${VersionCompare} $InstalledTomcatVersion ${TOMCAT_VERSION} $R0
    StrCmp $R0 "2" OldTomcatVersion GoodTomcatVersion

  OldTomcatVersion:
    StrCpy $TomcatHome ${DEFAULT_TOMCAT_HOME}
    StrCpy $UPGRADE_TOMCAT "1"
    Goto VerifyComponentUpgrades

  GoodTomcatVersion:
    ReadRegStr $TomcatHome ${PRODUCT_UNINST_ROOT_KEY} "$ActiveRegKey" "TomcatHome"
    StrCpy $UPGRADE_TOMCAT "0"
    Goto VerifyComponentUpgrades

  VerifyComponentUpgrades:
    StrCpy $R0 "As part of the upgrade to $(^Name) some included components need to be upgraded.$\nThe currently installed components were installed as part of the previous ${PRODUCT_NAME} installation.$\n$\n"
    StrCpy $0 0 ; Upgrade counter

    StrCmp $UPGRADE_JAVA "1" 0 +4
    StrCmp $InstalledJavaVersion "" +3 ; No warning if upgrading from no-JRE-included LabKey instance
    StrCpy $R0 "$R0Java will be upgraded from $InstalledJavaVersion to ${PACKAGED_JRE_DIR}$\n"
    IntOp $0 $0 + 1

    StrCmp $UPGRADE_TOMCAT "1" 0 +3
    StrCpy $R0 "$R0Tomcat will be upgraded from $InstalledTomcatVersion to ${TOMCAT_VERSION}$\n"
    IntOp $0 $0 + 1

    StrCmp $POSTGRES_INSTALL "1" 0 +3
    StrCpy $R0 "$R0Postgres will be upgraded from $InstalledPostgresVersion to ${POSTGRES_VERSION}$\n"
    IntOp $0 $0 + 1

    IntCmp 0 $0 +3 ; Any upgrades?
    StrCpy $R0 "$R0$\nPress OK to continue the installation and upgrade all components .$\nPress Cancel to cancel the ${PRODUCT_NAME} upgrade."
    MessageBox MB_OKCANCEL|MB_ICONEXCLAMATION "$R0" IDCANCEL Exit
    Return

  PipelineUpgrade:
    SetCurInstType 3
    StrCpy $PIPELINE "1"
    ReadRegStr $InstalledPipelineServiceName ${PRODUCT_UNINST_ROOT_KEY} "$ActiveRegKey" "PipelineServiceName"
    ReadRegStr $JavaHome ${PRODUCT_UNINST_ROOT_KEY} "$ActiveRegKey" "InstalledJavaHome"
    Return

  UnsupportedUpgrade:
    MessageBox MB_OK|MB_ICONSTOP "An existing installation of ${PRODUCT_NAME} $InstalledVersion has been found at $InstallLocation.$\n$\nAutomatic upgrade is only supported for versions 14.1 and later.  Please see the ${PRODUCT_NAME} support site for manual upgrade instructions."
  Exit:
    Quit
  LabKeyAbsent:
  SetCurInstType 0
  StrCpy $UPGRADE "0"
  ; Check for Postgres Installation:
  ClearErrors
  EnumRegKey $RegKey HKLM "SOFTWARE\Wow6432Node\PostgreSQL\Installations" 0
  ; If the key isn't present at all, we'll have an error and we can move on.
  IfErrors Postgres64Absent Verify64InstallKey

  Verify64InstallKey:
    ; If the key is present, but doesn't contain any sub-keys, we know that a previous installation of Postgres was removed, so we can continue:
    StrCmp "" $RegKey PostgresAbsent PostgresPresent

  Postgres64Absent:
  ClearErrors
  EnumRegKey $RegKey HKLM "SOFTWARE\PostgreSQL\Installations" 0
  ; If the key isn't present at all, we'll have an error and we can move on.
  IfErrors PostgresAbsent VerifyInstallKey

  VerifyInstallKey:
    ; If the key is present, but doesn't contain any sub-keys, we know that a previous installation of Postgres was removed, so we can continue:
    StrCmp "" $RegKey PostgresAbsent PostgresPresent

  PostgresPresent:
    ReadRegStr $InstallLocation HKLM "SOFTWARE\PostgreSQL\Installations\$RegKey" "Base Directory"
    IfFileExists $InstallLocation 0 PostgresAbsent
    MessageBox MB_OK|MB_ICONEXCLAMATION "An existing installation of PostgresSQL has been found at $InstallLocation.$\nOnly one instance of PostgreSQL may be installed at a time.$\n$\nOnly LabKey Remote Pipeline Server install will be available."
    StrCpy $EXISTING_POSTGRES_INSTALL "1"
  PostgresAbsent:
    ; continue...
FunctionEnd

Var currentConfigFile
Function ReplaceTomcatConfigParameters
  Pop $currentConfigFile

  ; Track installer instances via mothership
  !insertmacro ReplaceInFile $currentConfigFile "<!--@@installer@@" ""
  !insertmacro ReplaceInFile $currentConfigFile "@@installer@@-->" ""

  !insertmacro ReplaceInFile $currentConfigFile "@@appContextPath@@" ""
  !insertmacro ReplaceInFile $currentConfigFile "@@appDocBase@@" "$INSTDIR\labkeywebapp"
  ; smtp
  !insertmacro ReplaceInFile $currentConfigFile "@@smtpHost@@" "$SMTP_SERVER"
  ;!insertmacro ReplaceInFile $currentConfigFile "@@smtpUser@@" "$SMTP_USERNAME"
  !insertmacro ReplaceInFile $currentConfigFile "@@smtpUser@@" "Anonymous"
  !insertmacro ReplaceInFile $currentConfigFile "@@smtpPort@@" "$SMTP_PORT"
  !insertmacro ReplaceInFile $currentConfigFile "@@jdbcDriverClassName@@" "org.postgresql.Driver"

  Push "$POSTGRES_SUPERUSER"
  Call htmlEncode
  Pop $R0
  !insertmacro ReplaceInFile $currentConfigFile "@@jdbcUser@@" $R0

  Push "$POSTGRES_SUPERUSER_PASSWORD"
  Call htmlEncode
  Pop $R0
  !insertmacro ReplaceInFile $currentConfigFile "@@jdbcPassword@@" $R0

  !insertmacro ReplaceInFile $currentConfigFile "@@jdbcURL@@" "jdbc:postgresql://localhost:${POSTGRES_PORT}/labkey"
  !insertmacro ReplaceInFile $currentConfigFile "@@dbschema/default@@" "jdbc/labkeyDataSource,labkey"
  !insertmacro ReplaceInFile $currentConfigFile "@@pipelineConfigPath@@" "$INSTDIR\config"

  StrCmp $INCLUDE_THERMO "1" 0 Tidy
  !insertmacro ReplaceInFile $currentConfigFile "<!--@@pipeline@@" ""
  !insertmacro ReplaceInFile $currentConfigFile "@@pipeline@@-->" ""
  GoTo Done
  Tidy:
  !insertmacro ReplaceInFile $currentConfigFile "@@pipeline@@" ""
  Done:
  Delete "$currentConfigFile.old"
FunctionEnd

Function ReplacePipelineConfigParameters
  Pop $currentConfigFile

  !insertmacro ReplaceInFile $currentConfigFile "@@toolsDirectory@@" "${THIRDPARTY_INSTALL_ROOT}\bin"

  ; Insert values collected by wizard
  !insertmacro ReplaceInFile $currentConfigFile "@@jmsHost@@" "$PIPELINE_CONFIG_JMS_HOST"
  !insertmacro ReplaceInFile $currentConfigFile "@@jmsPort@@" "$PIPELINE_CONFIG_JMS_PORT"

  !insertmacro ReplaceInFile $currentConfigFile "@@networkDriveLetter@@" "$PIPELINE_CONFIG_NETWORK_DRIVE_LETTER"
  !insertmacro ReplaceInFile $currentConfigFile "@@networkDrivePath@@" "$PIPELINE_CONFIG_NETWORK_DRIVE_PATH"
  !insertmacro ReplaceInFile $currentConfigFile "@@networkDriveUser@@" "$PIPELINE_CONFIG_NETWORK_DRIVE_USERNAME"
  !insertmacro ReplaceInFile $currentConfigFile "@@networkDrivePassword@@" "$PIPELINE_CONFIG_NETWORK_DRIVE_PASSWORD"

  !insertmacro ReplaceInFile $currentConfigFile "@@pathMapLocal@@" "$PIPELINE_CONFIG_PATH_MAPPER_LOCAL"
  !insertmacro ReplaceInFile $currentConfigFile "@@pathMapRemote@@" "$PIPELINE_CONFIG_PATH_MAPPER_REMOTE"

  Delete "$currentConfigFile.old"
FunctionEnd

Function htmlEncode
  Pop $R0
  !insertmacro StrReplace $R0 $R0 '&' '&amp;'
  !insertmacro StrReplace $R0 $R0 '<' '&lt;'
  !insertmacro StrReplace $R0 $R0 '>' '&gt;'

  ; we can't use the macro for replacing the double-quote; it won't compile correctly.
  Push $R0
  Push "$\""
  Push '&quot;'
  Call StrReplace
  Pop $R0

  Push $R0
FunctionEnd

Function OnUserAbort
  Call CleanupFailedInstall
FunctionEnd

Function .onInstFailed
  Call CleanupFailedInstall
FunctionEnd

Function .onInstSuccess
  RMDir /r "$INSTDIR\3rdparty"
FunctionEnd

Function CleanupFailedInstall
  StrCmp $UPGRADE "1" Done
  ;placeholder
  Done:
FunctionEnd
; ------------ Uninstaller ---------------

Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) was successfully removed from your computer."
FunctionEnd

Function un.onInit
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Are you sure you want to completely remove $(^Name) and all of its components?" IDYES +2
  Abort
FunctionEnd

Var DeletePostgresData
Var DeleteLabkeyFiles
Section Uninstall
  ReadRegStr $InstallType ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Type"
  StrCmp $InstallType "${PIPELINE_INSTALL_TYPE}" 0 +3
  ExecWait '$INSTDIR\config\prunsrv32.exe //DS//${PIPELINE_SERVICE_NAME}'
  GoTo FinishDeletion ; No files or postgres data to delete on a pipeline install.

  ExecWait 'net stop ${TOMCAT_SERVICE_NAME}' $0
  DetailPrint "Call to stop tomcat service returned $0"
  ExecWait 'net stop ${POSTGRES_SERVICE_SHORT_NAME}' $0
  DetailPrint "Call to stop Postgres service returned $0"

  StrCpy $DeleteLabkeyFiles "no"
  MessageBox MB_YESNO|MB_ICONQUESTION "Remove all LabKey user data?$\n$\nBy default, this data is stored in $INSTDIR\files. Any custom file roots must be deleted manually." IDNO +2
  StrCpy $DeleteLabkeyFiles "yes"

  StrCpy $DeletePostgresData "no"
  MessageBox MB_YESNO|MB_ICONQUESTION "Remove PostgreSQL data files?  All database data will be permanently deleted." IDNO +2
  StrCpy $DeletePostgresData "yes"

  UninstallPostgres:
  ReadRegStr $POSTGRES_INSTALL_LOCATION ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "PostgresUninstaller"
  IfFileExists $POSTGRES_INSTALL_LOCATION 0 PreDeletePostgresUser
  ExecWait '"$POSTGRES_INSTALL_LOCATION" --mode unattended --unattendedmodeui minimal'

  PreDeletePostgresUser:
  ReadRegStr $POSTGRES_SERVICE_USER ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "PostgresUser"
  StrCmp $POSTGRES_SERVICE_USER "" UnknownPostgresUser

  DeletePostgresUser:
  ExecWait 'net user /delete $POSTGRES_SERVICE_USER'

  UnknownPostgresUser:

  StrCmp $DeletePostgresData "yes" DeletePostgresDataFiles DeleteTomcat

  DeletePostgresDataFiles:
  RMDir /r /REBOOTOK "${POSTGRES_INSTDIR}"

  DeleteTomcat:
  Delete "${TOMCAT_TARGET_ZIP}"
  ReadRegStr $JavaHome ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "InstalledJavaHome"
  ReadRegStr $TomcatHome ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "TomcatHome"
  ExecWait '"$TomcatHome\bin\${TOMCAT_EXE}" //DS//${TOMCAT_SERVICE_NAME} --JavaHome="$JavaHome"'
  DetailPrint "Tomcat service deletion returned $0"
  RMDir /r /REBOOTOK "$TomcatHome"

  FinishDeletion:
  Delete "$INSTDIR\${PRODUCT_PUBLISHER}.url"
  Delete "$INSTDIR\Support.url"
  Delete "$INSTDIR\LabKey.url"
  Delete "$INSTDIR\uninst.exe"
  Delete "$INSTDIR\license.rtf"
  Delete "$INSTDIR\threadDumpRequest"

  RMDir /r "$JavaHome"

  Delete "$SMPROGRAMS\${PRODUCT_NAME}\Uninstall.lnk"
  Delete "$SMPROGRAMS\${PRODUCT_NAME}\Support.lnk"
  Delete "$SMPROGRAMS\${PRODUCT_NAME}\LabKey.lnk"

  Delete "$INSTDIR\labkeyBootstrap*.jar"
  Delete "$INSTDIR\heapDumpRequest"
  Delete "$INSTDIR\install.log"
  Delete "$INSTDIR\install_debug.log"

  RMDir "$SMPROGRAMS\${PRODUCT_NAME}"
  RMDir /r "$INSTDIR\3rdparty"
  RMDir /r "$INSTDIR\bin"
  RMDir /r "$INSTDIR\labkeywebapp"
  RMDir /r "$INSTDIR\modules"
  RMDir /r "$INSTDIR\samples"
  RMDir /r "$INSTDIR\upgrade_backup"
  RMDir /r "$INSTDIR\config"
  RMDir /r "$INSTDIR\pipeline-lib"
  RMDir /r "$INSTDIR\logs"
  RMDir /r "$INSTDIR\externalModules"
  RMDir /r "${PACKAGED_JAVA_HOME}"
  StrCmp $DeleteLabkeyFiles "yes" 0 +2
  RMDir /r "$INSTDIR\files"
  RMDir "$INSTDIR"

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  SetAutoClose true
SectionEnd
