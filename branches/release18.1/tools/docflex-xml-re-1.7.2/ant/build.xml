<?xml version="1.0"?>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- This ANT buildfile demonstrates how to integrate -->
<!-- DocFlex/XML generator with Apache Ant            -->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<project name="DocFlex/XML Ant Integration Demo" basedir=".">

  <!-- This will generate an XML schema documentation -->
  <target name="XSDDoc">

    <!-- the location of the DocFlex/XML home directory -->
    <property name="DFH" value=".."/>

    <!-- DocFlex/XML RE Java class path -->
    <property name="cp" value="${DFH}/lib/xml-apis.jar;${DFH}/lib/xercesImpl.jar;${DFH}/lib/docflex-xml-re.jar"/>

    <!--
       Execute the DocFlex/XML generator.

       IMPORTANT: The 'maxmemory' attribute sets the maximum heap size
       available to Java VM when running DocFlex/XML. 
       Check this attribute when you need to process large quantities of data
       (e.g. when you generate documentation by XML schemas with a great number
       of component definitions).

       The 'fork' attribute tells the Ant to launch a separate instance of JVM.
       This is needed to ensure that the memory specified in the 'maxmemory' 
       attribute will be allocated indeed. However, you may remain using Ant's 
       JVM instance, if you have already specified for it that much of memory.
    -->
    <java classname="com.docflex.xml.Generator" classpath="${cp}" 
          maxmemory="512m" fork="true">

       <!-- specify the template -->
       <arg value="-template"/>
       <arg value="${DFH}/templates/XSDDoc/FramedDoc.tpl"/>

       <!-- specify the output format -->
       <arg value="-format"/>
       <arg value="HTML"/>

       <!-- specify the output directory -->
       <arg value="-d"/>
       <arg value="${DFH}/out"/>

       <!-- specify to not launch the generator GUI -->
       <arg value="-nodialog"/>

       <!-- specify to not launch the default viewer for the output file -->
       <arg value="-launchviewer=false"/>

       <!-- pass the template parameter (the documentation title, in this case) -->
       <arg value="-p:docTitle=XML Schema for XML Schemas"/> 

       <!-- 
         Specify the data source XML file to be processed by the specified template. 
         (In this case, it is the XML schema to be documented.)
       -->
       <arg value="${DFH}/templates/XSDDoc/xsd/XMLSchema.xsd"/>

    </java>

  </target>

</project>